<!-- uber BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Mon Apr 01 20:57:25 CEST 2019 -->

<bpel:process name="uber"
	targetNamespace="http://www.uber.com/bpel/uber"
	suppressJoinFailure="yes" xmlns:tns="http://www.uber.com/bpel/uber"
	xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:types="http://uber.com/DataTypes"
	xmlns:feedback="http://uber.com/FeedbackService"
	xmlns:invoicing="http://uber.com/InvoicingService"
	xmlns:navigation="http://uber.com/NavigationService"
	xmlns:notifier="http://uber.com/NotifierService"
	xmlns:pricing="http://uber.com/PricingService"
	xmlns:elements="http://uber.com/Elements">
	<!-- Import the client WSDL -->
	<bpel:import location="uberArtifacts.wsdl"
		namespace="http://www.uber.com/bpel/uber"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- Import the server WSDLs -->

	<bpel:import namespace="http://uber.com/FeedbackService"
		location="Feedback.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import namespace="http://uber.com/InvoicingService"
		location="Invoicing.wsdl"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import namespace="http://uber.com/NavigationService"
		location="Navigation.wsdl"
		importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import namespace="http://uber.com/NotifierService"
		location="Notifier.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import namespace="http://uber.com/PricingService"
		location="Pricing.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" />

	<!-- ================================================================= -->
	<!-- PARTNERLINKS -->
	<!-- List of services participating in this BPEL process -->
	<!-- ================================================================= -->
	<bpel:partnerLinks>
		<!-- The 'client' role represents the requester of this service. It is 
			used for callback. The location and correlation information associated with 
			the client role are automatically set using WS-Addressing. -->
		<bpel:partnerLink name="requestRideLink"
			partnerLinkType="tns:requestRideLink" myRole="uberProvider" />
		<bpel:partnerLink name="navigationLink"
			partnerLinkType="tns:navigationLink" partnerRole="navigator" />
		<bpel:partnerLink name="pricingLink"
			partnerLinkType="tns:pricingLink" partnerRole="assessor" />

	</bpel:partnerLinks>

	<!-- ================================================================= -->
	<!-- VARIABLES -->
	<!-- List of messages and XML documents used within this BPEL process -->
	<!-- ================================================================= -->
	<bpel:variables>
		<!-- Reference to the message passed as input during initiation -->
		<bpel:variable name="input"
			messageType="tns:requestRideRequestMessage" />
		<bpel:variable name="distanceInput"
			messageType="navigation:GetDistanceRequestMessage" />
		<bpel:variable name="distanceOutput"
			messageType="navigation:GetDistanceResponseMessage" />
		<bpel:variable name="pricingInput"
			messageType="pricing:GetPriceRequestMessage" />
		<bpel:variable name="pricingOutput"
			messageType="pricing:GetPriceResponseMessage" />

		<!-- Reference to the message that will be sent back to the requester during 
			callback -->
		<bpel:variable name="output"
			messageType="tns:requestRideResponseMessage" />
	</bpel:variables>

	<!-- ================================================================= -->
	<!-- ORCHESTRATION LOGIC -->
	<!-- Set of activities coordinating the flow of messages across the -->
	<!-- services integrated within this business process -->
	<!-- ================================================================= -->
	<bpel:sequence name="main">

		<!-- Receive input from requestor. Note: This maps to operation defined 
			in uber.wsdl -->
		<bpel:receive name="receiveInput" partnerLink="requestRideLink"
			portType="tns:requestRidePortType" operation="requestRide" variable="input"
			createInstance="yes" />

		<bpel:assign name="InitiateVars">
			<bpel:copy>
				<bpel:from>
					<bpel:literal>
						<elements:GetDistanceRequest>
							<CurrentLocation>
								<Longitude>0</Longitude>
								<Latitude>0</Latitude>
							</CurrentLocation>
							<EndLocation>
								<Longitude>0</Longitude>
								<Latitude>0</Latitude>
							</EndLocation>
						</elements:GetDistanceRequest>
					</bpel:literal>
				</bpel:from>
				<bpel:to>$distanceInput.inputParameters</bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from>
					<bpel:literal>
						<elements:GetPriceRequest
							xmlns:dt="http://uber.com/DataTypes"
							xmlns:elements="http://uber.com/Elements"
							xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
							<Location>
								<Longitude>0.0</Longitude>
								<Latitude>0.0</Latitude>
							</Location>
							<Time>2001-12-31T12:00:00</Time>
						</elements:GetPriceRequest>
					</bpel:literal>
				</bpel:from>
				<bpel:to>
					$pricingInput.inputParameters
				</bpel:to>
			</bpel:copy>
			<bpel:copy>
				<bpel:from>
					<bpel:literal>
						<elements:uberResponse
							xmlns:dt="http://uber.com/DataTypes"
							xmlns:elements="http://uber.com/Elements"
							xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
							<result>0.0</result>
						</elements:uberResponse>
					</bpel:literal>
				</bpel:from>
				<bpel:to>
					$output.payload
				</bpel:to>
			</bpel:copy>
		</bpel:assign>

		<bpel:flow>
			<bpel:sequence name="getDistance">
				<bpel:assign name="createDistanceInput">
					<bpel:copy>
						<bpel:from>
							$input.payload/StartLocation
						</bpel:from>
						<bpel:to>
							$distanceInput.inputParameters/CurrentLocation
						</bpel:to>
					</bpel:copy>
					<bpel:copy>
						<bpel:from>
							$input.payload/EndLocation
						</bpel:from>
						<bpel:to>
							$distanceInput.inputParameters/EndLocation
						</bpel:to>
					</bpel:copy>
				</bpel:assign>
				<bpel:invoke name="Invoke-navigation-getDistance"
					partnerLink="navigationLink" operation="GetDistance"
					portType="navigation:NavigationPortType"
					inputVariable="distanceInput" outputVariable="distanceOutput" />
			</bpel:sequence>
			<bpel:sequence name="getPricePerKM">
				<bpel:assign name="createPricingInput">
					<bpel:copy>
						<bpel:from>
							$input.payload/StartLocation
						</bpel:from>
						<bpel:to>
							$pricingInput.inputParameters/Location
						</bpel:to>
					</bpel:copy>
					<bpel:copy>
						<bpel:from>
							$input.payload/Time
						</bpel:from>
						<bpel:to>
							$pricingInput.inputParameters/Time
						</bpel:to>
					</bpel:copy>
				</bpel:assign>
				<bpel:invoke name="Invoke-pricing-getPrice"
					partnerLink="pricingLink" operation="GetPrice"
					portType="pricing:PricingPortType"
					inputVariable="pricingInput" outputVariable="pricingOutput" />
			</bpel:sequence>
		</bpel:flow>

		<bpel:assign name="calculatePrice">
			<bpel:copy>
				<bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                    $distanceOutput.outputParameters/Distance * $pricingOutput.outputParameters/Price
                </bpel:from>
				<bpel:to>
					$output.payload/result
				</bpel:to>
			</bpel:copy>
        </bpel:assign>

		<!-- Asynchronous callback to the requester. Note: the callback location 
			and correlation id is transparently handled using WS-addressing. -->
		<bpel:reply name="callbackClient" partnerLink="requestRideLink"
			portType="tns:requestRidePortType" operation="requestRide" variable="output" />
	</bpel:sequence>
</bpel:process>

